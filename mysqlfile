# Data type of all columns in customers table
SELECT column_name, data_type
FROM INFORMATION_SCHEMA.COLUMNS
WHERE table_name = 'customers' AND table_schema = 'TargetSQL';

#time range with which orders where placed
SELECT MIN(order_purchase_timestamp) as min_time , MAX(order_purchase_timestamp) as max_time
FROM `orders`

#Count the Cities & States of customers who ordered during the given period

SELECT count(distinct c.customer_city ) as no_cities, count(distinct c.customer_state) as no_states
from orders o inner join customers c on o.customer_id = c.customer_id


#Is there a growing trend in the no. of orders placed over the past years?
select extract(year from order_purchase_timestamp ) as year,  count(order_id) as num_orders
from orders
group by 1
order by 1

#Can we see some kind of monthly seasonality in terms of the no. of orders being placed?
select extract(year from order_purchase_timestamp ) as year, extract(month from order_purchase_timestamp) as month , count(order_id) as num_orders
from orders
group by 1,2
order by 1,2 

#During what time of the day, do the Brazilian customers mostly place their orders? (Dawn, Morning, Afternoon or Night)
SELECT CASE WHEN EXTRACT(HOUR from order_purchase_timestamp) BETWEEN 0 AND 6 THEN 'DAWN'
            WHEN EXTRACT(HOUR from order_purchase_timestamp) BETWEEN 7 AND 12 THEN 'MORNING'
            WHEN EXTRACT(HOUR from order_purchase_timestamp) BETWEEN 13 AND 18 THEN 'AFTERNOON'
            WHEN EXTRACT(HOUR from order_purchase_timestamp) BETWEEN 19 AND 23 THEN 'NIGHT'
            END AS order_time,  count(*) as no_orders
from orders
group by order_time
order by no_orders desc
#Insights:
#Brazilian customers placed highest number of orders in afternoon then second highest number of orders were in night , thirdly in the morning and lastly in dawn.

#Get the month on month no. of orders placed in each state
select extract(year from order_purchase_timestamp) as year ,extract(month from order_purchase_timestamp) as month, customer_state , count(*) as no_orders
from orders o inner join customers c using(customer_id)
group by 1,2,3
order by 4 desc;
#Insights:
# In the year 2018 highest number of orders were placed in August month from state SP with no of oders placed being 3253

#How are the customers distributed across all the states?
select customer_state, count(customer_id) as no_customers, dense_rank() over( order by count(customer_id) desc) as rnk
from customers
group by 1
order by 2 desc
#Insights
#SP state as the highest customers  41746 with rank 1 then RJ has the second highest number of customers 12852 with rank 2 the lowest number of customers are in RR with 46 customers with rank 27.

#The % increase in the cost of orders from year 2017 to 2018 (including months between Jan to Aug only).
with final as
(
select  extract(year from order_purchase_timestamp) as year, round(sum(payment_value),2)as cost
from orders o inner join payments p using(order_id)
where extract( year from order_purchase_timestamp) between 2017 and 2018
and extract( month from order_purchase_timestamp) between 1 and 8 
group by 1
order by 1
)
select *, (next_year-cost)/cost * 100 as percent_increase
from 
(
select *, lead(cost) over(order by year) as next_year
from final ) A

#Insights: the percentage increase from 2017 to 2018 is 137%

#The Total & Average value of order price for each state.
select c.customer_state, sum(payment_value) as Total_Value, avg(payment_value) as Average_Value
from customers c inner join orders o on c.customer_id = o.customer_id 
inner join payments p on o.order_id = p.order_id
group by 1
order by 2;

#The Total & Average value of order freight for each state.
select c.customer_state, sum(freight_value )as Total_Value, avg(freight_value) as Average_Value
from customers c inner join orders o on c.customer_id = o.customer_id 
inner join order_items oi on o.order_id = oi.order_id
group by 1
order by 2;

# The no. of days taken to deliver each order from the orderâ€™s purchase date as delivery time.
select order_id, TIMESTAMPDIFF(day,order_purchase_timestamp,order_delivered_customer_date) as time_to_deliver, TIMESTAMPDIFF(day,order_delivered_customer_date,order_estimated_delivery_date)
as diff_estimated_delivery
from orders
where order_status = 'delivered';

#the top 5 states with the highest & lowest average freight value
(
select customer_state, ROUND(avg(freight_value),2) as avg_freight_price
from orders INNER JOIN order_items USING(order_id)
INNER JOIN customers USING(customer_id)
group by customer_state
order by 2 desc
LIMIT 5
)
UNION
(
select customer_state, ROUND(avg(freight_value),2) as avg_freight_price
from orders INNER JOIN order_items USING(order_id)
INNER JOIN customers USING(customer_id)
group by customer_state
order by 2 asc
LIMIT 5
);

#the top 5 states where the order delivery is really fast as compared to the estimated date of delivery.
SELECT customer_state AS state, ROUND(SUM(TIMESTAMPDIFF(day, order_purchase_timestamp,order_delivered_customer_date))/COUNT(ORDER_ID), 2) AS average_time_for_del,
ROUND(SUM(TIMESTAMPDIFF(day, order_purchase_timestamp,order_estimated_delivery_date))/COUNT(ORDER_ID), 2) AS average_est_dil_time
FROM orders o INNER JOIN customers c ON o.customer_id=c.customer_id
WHERE order_status='delivered'
GROUP BY customer_state
ORDER BY (average_time_for_del-average_est_dil_time);

#the month on month no. of orders placed using different payment types.
select payment_type, extract(year from order_purchase_timestamp) as yr, extract(month from order_purchase_timestamp) as mnth, count( o.order_id) as num_orders
from payments p INNER JOIN orders o USING(order_id)
group by payment_type,yr,mnth
order by 2,3

# the no. of orders placed on the basis of the payment installments that have been paid.
select  count(distinct order_id) as num_orders, payment_installments
from payments
where payment_installments >= 1
group by payment_installments;
